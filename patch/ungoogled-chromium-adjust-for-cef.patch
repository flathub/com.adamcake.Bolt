diff --git a/patches/core/ungoogled-chromium/fix-building-without-safebrowsing.patch b/patches/core/ungoogled-chromium/fix-building-without-safebrowsing.patch
--- a/patches/core/ungoogled-chromium/fix-building-without-safebrowsing.patch
+++ b/patches/core/ungoogled-chromium/fix-building-without-safebrowsing.patch
@@ -51,9 +51,9 @@
        "//chrome/browser/profile_resetter:profile_reset_report_proto",
        "//chrome/browser/resource_coordinator:intervention_policy_database_proto",
 @@ -6117,10 +6104,6 @@ static_library("browser") {
+     sources += [
+       "enterprise/chrome_browser_main_extra_parts_enterprise.cc",
        "enterprise/chrome_browser_main_extra_parts_enterprise.h",
-       "enterprise/connectors/analysis/content_analysis_sdk_manager.cc",
-       "enterprise/connectors/analysis/content_analysis_sdk_manager.h",
 -      "enterprise/connectors/analysis/local_binary_upload_service.cc",
 -      "enterprise/connectors/analysis/local_binary_upload_service.h",
 -      "enterprise/connectors/analysis/local_binary_upload_service_factory.cc",
@@ -1743,6 +1743,14 @@
  
 --- a/chrome/browser/prefs/browser_prefs.cc
 +++ b/chrome/browser/prefs/browser_prefs.cc
+@@ -57,7 +57,6 @@
+ #include "components/privacy_sandbox/privacy_sandbox_prefs.h"
+ #include "components/proxy_config/pref_proxy_config_tracker_impl.h"
+ #include "components/proxy_config/proxy_config_dictionary.h"
+-#include "components/safe_browsing/core/common/safe_browsing_prefs.h"
+ #include "components/safe_search_api/safe_search_util.h"
+ #include "components/spellcheck/browser/pref_names.h"
+ #include "components/sync_preferences/pref_service_syncable.h"
 @@ -266,7 +266,6 @@
  #include "chrome/browser/new_tab_page/modules/drive/drive_service.h"
  #include "chrome/browser/new_tab_page/modules/photos/photos_service.h"
@@ -1751,6 +1759,14 @@
  #include "chrome/browser/new_tab_page/promos/promo_service.h"
  #include "chrome/browser/policy/developer_tools_policy_handler.h"
  #include "chrome/browser/search/background/ntp_custom_background_service.h"
+@@ -277,7 +277,6 @@ std::unique_ptr<PrefService> CreatePrefService(Profile* profile,
+     prefetch::RegisterPredictionOptionsProfilePrefs(registry.get());
+     privacy_sandbox::RegisterProfilePrefs(registry.get());
+     ProfileNetworkContextService::RegisterProfilePrefs(registry.get());
+-    safe_browsing::RegisterProfilePrefs(registry.get());
+     unified_consent::UnifiedConsentService::RegisterPrefs(registry.get());
+ 
+     const std::string& locale =
 @@ -1550,7 +1549,6 @@ void RegisterProfilePrefs(user_prefs::Pr
    NewTabPageHandler::RegisterProfilePrefs(registry);
    NewTabPageUI::RegisterProfilePrefs(registry);
@@ -2646,3 +2662,27 @@
      "//components/safe_browsing/content/browser/web_ui",
      "//components/safe_browsing/content/common:interfaces",
      "//components/safe_browsing/content/renderer:throttles",
+--- a/cef/libcef/browser/alloy/chrome_browser_process_alloy.h
++++ b/cef/libcef/browser/alloy/chrome_browser_process_alloy.h
+@@ -90,7 +90,6 @@ class ChromeBrowserProcessAlloy : public BrowserProcess {
+       std::unique_ptr<BackgroundModeManager> manager) override;
+ #endif
+   StatusTray* status_tray() override;
+-  safe_browsing::SafeBrowsingService* safe_browsing_service() override;
+   subresource_filter::RulesetService* subresource_filter_ruleset_service()
+       override;
+   StartupData* startup_data() override;
+--- a/cef/libcef/browser/alloy/chrome_browser_process_alloy.cc
++++ b/cef/libcef/browser/alloy/chrome_browser_process_alloy.cc
+@@ -335,11 +335,6 @@ StatusTray* ChromeBrowserProcessAlloy::status_tray() {
+   return nullptr;
+ }
+ 
+-safe_browsing::SafeBrowsingService*
+-ChromeBrowserProcessAlloy::safe_browsing_service() {
+-  return nullptr;
+-}
+-
+ subresource_filter::RulesetService*
+ ChromeBrowserProcessAlloy::subresource_filter_ruleset_service() {
+   DCHECK(false);
diff --git a/patches/extra/ungoogled-chromium/add-flag-to-hide-side-panel-button.patch b/patches/extra/ungoogled-chromium/add-flag-to-hide-side-panel-button.patch
--- a/patches/extra/ungoogled-chromium/add-flag-to-hide-side-panel-button.patch
+++ b/patches/extra/ungoogled-chromium/add-flag-to-hide-side-panel-button.patch
@@ -1,11 +1,11 @@
 --- a/chrome/browser/ui/views/toolbar/toolbar_view.cc
 +++ b/chrome/browser/ui/views/toolbar/toolbar_view.cc
-@@ -314,7 +314,8 @@ void ToolbarView::Init() {
+@@ -332,7 +332,8 @@ void ToolbarView::Init() {
  
    std::unique_ptr<SidePanelToolbarButton> side_panel_button;
    std::unique_ptr<SidePanelToolbarContainer> side_panel_toolbar_container;
--  if (browser_view_->unified_side_panel()) {
-+  if (browser_view_->unified_side_panel() &&
+-  if (browser_view_->unified_side_panel() && BUTTON_VISIBLE(kSidePanel)) {
++  if (browser_view_->unified_side_panel() && BUTTON_VISIBLE(kSidePanel) &&
 +      !base::CommandLine::ForCurrentProcess()->HasSwitch("hide-sidepanel-button")) {
      if (base::FeatureList::IsEnabled(
              companion::features::kSidePanelCompanion)) {
diff --git a/patches/extra/ungoogled-chromium/add-flag-for-incognito-themes.patch b/patches/extra/ungoogled-chromium/add-flag-for-incognito-themes.patch
--- a/patches/extra/ungoogled-chromium/add-flag-for-incognito-themes.patch
+++ b/patches/extra/ungoogled-chromium/add-flag-for-incognito-themes.patch
@@ -6,8 +6,8 @@
  bool BrowserFrame::ShouldUseDarkTheme() const {
 +  if (base::CommandLine::ForCurrentProcess()->HasSwitch("enable-incognito-themes"))
 +    return false;
-   return browser_view_->browser()->profile()->IsIncognitoProfile();
- }
+   if (!browser_view_)
+     return false;
 --- a/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
 +++ b/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
 @@ -426,7 +426,9 @@ void NTPResourceCache::CreateNewTabIncog
