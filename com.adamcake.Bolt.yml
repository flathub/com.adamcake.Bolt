app-id: com.adamcake.Bolt
runtime: org.freedesktop.Platform
runtime-version: &runtime-version "24.08"
x-gl-version: &gl-version "1.4"
x-gl-versions: &gl-versions 24.08;24.08-extra;1.4
x-gl-merge-dirs: &gl-merge-dirs vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
sdk: org.freedesktop.Sdk
command: bolt
build_options:
  cflags: -O3
  cflags-override: true
  cppflags: -O3
  cppflags-override: true
  cxxflags: -O3
  cxxflags-override: true
  append-path: /app/lib/sdk/llvm21/bin:/usr/lib/sdk/rust-stable/bin
  append-ld-library-path: /usr/lib/sdk/rust-stable/lib
finish-args:
  - --device=dri
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --share=network
  - --allow=multiarch
  - --env=JAVA_HOME=/app/jre
  - --talk-name=org.freedesktop.Notifications
  - --filesystem=xdg-data/icons:create
  - --filesystem=xdg-run/app/com.discordapp.Discord
  - --filesystem=xdg-run/discord-ipc-0
sdk-extensions:
  - org.freedesktop.Sdk.Extension.openjdk21
  - org.freedesktop.Sdk.Extension.node22
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.rust-stable

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: *runtime-version

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: *runtime-version
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: *gl-merge-dirs
    download-if: active-gl-driver
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.GL32.Debug:
    directory: lib/debug/lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    merge-dirs: *gl-merge-dirs
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

modules:
  - name: platform-bootstrap
    buildsystem: simple
    build-commands:
      - |
        set -e
        mkdir -p /app/bin
        mkdir -p /app/lib/i386-linux-gnu
        mkdir -p /app/lib/i386-linux-gnu/GL
        mkdir -p /app/lib/i386-linux-gnu/dri/intel-vaapi-driver
        mkdir -p /app/lib/debug/lib/i386-linux-gnu
        mkdir -p /app/lib/debug/lib/i386-linux-gnu/GL
        install -Dm644 -t /app/etc ld.so.conf
        mkdir -p /app/lib{,32}/ffmpeg
        mkdir -p /app/share/steam/compatibilitytools.d
        mkdir -p /app/utils /app/share/vulkan
        ln -srv /app/{utils/,}share/vulkan/explicit_layer.d
        ln -srv /app/{utils/,}share/vulkan/implicit_layer.d
        mkdir -p /app/links/lib
        ln -srv /app/lib /app/links/lib/x86_64-linux-gnu
        ln -srv /app/lib32 /app/links/lib/i386-linux-gnu
    sources:
      - type: inline
        dest-filename: ld.so.conf
        contents: |
          # We just make any GL32 extension have higher priority
          include /run/flatpak/ld.so.conf.d/app-*-org.freedesktop.Platform.GL32.*.conf
          /app/lib32
          /app/lib/i386-linux-gnu
          /lib64
  - name: krb5
    buildsystem: simple
    build-commands:
      - autoreconf
      - ./configure --prefix=/app
      - make -j $FLATPAK_BUILDER_N_JOBS
      - make install
    subdir: src
    sources:
      - type: git
        url: https://github.com/krb5/krb5.git
        tag: krb5-1.21.2-final
        commit: 835f6e3d819beb7ee1046f01afb284b54ad54c5f
  - name: openjdk
    buildsystem: simple
    build-commands:
      - /usr/lib/sdk/openjdk21/install.sh
  - shared-modules/gtk2/gtk2.json
  - name: openssl
    buildsystem: simple
    build-commands:
      - ./config --prefix=/app --openssldir=/app/ssl shared zlib
      - make -j $FLATPAK_BUILDER_N_JOBS
      - make install_sw
    sources:
      - type: git
        url: https://github.com/openssl/openssl.git
        tag: OpenSSL_1_1_1w
        commit: e04bd3433fd84e1861bf258ea37928d9845e6a86
  - name: libnotify
    buildsystem: meson
    config-opts:
      - -Dman=false
      - -Dgtk_doc=false
      - -Ddocbook_docs=disabled
    cleanup:
      - /include
      - /lib/pkgconfig
      - /lib/debug
      - /lib/girepository-1.0
      - /share/gtk-doc
      - /share/gir-1.0
    sources:
      - type: git
        url: https://github.com/GNOME/libnotify.git
        tag: 0.8.3
        commit: 6083790f9e0f1827147ecd8799c4dced0e86a877
  - name: luajit
    buildsystem: simple
    build-commands:
      - make -j $FLATPAK_BUILDER_N_JOBS
      - make PREFIX=/app install
    sources:
      - type: git
        url: https://github.com/LuaJIT/LuaJIT.git
        tag: v2.1.ROLLING
        commit: 2090842410e0ba6f81fad310a77bf5432488249a
  - name: llvm21
    buildsystem: simple
    build-commands:
      - cmake -S llvm21/llvm -B llvm21/build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;lld;compiler-rt" -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=host
      - cmake --build llvm21/build -j $FLATPAK_BUILDER_N_JOBS
      - cmake --install llvm21/build --prefix /app/lib/sdk/llvm21
    sources:
      - type: git
        url: https://github.com/llvm/llvm-project.git
        tag: llvmorg-21.1.2
        commit: b708aea0bc7127adf4ec643660699c8bcdde1273
        dest: llvm21
    cleanup: ['*']
  - name: chromium
    buildsystem: simple
    build-commands:
      - ./scripts/build.sh
    build-options:
      env:
        GN_DEFINES: 'enable_speech_service=false treat_warnings_as_errors=false angle_build_tests=false angle_enable_commit_id=false blink_symbol_level=0 build_angle_perftests=false build_dawn_tests=false build_with_tflite_lib=false chrome_enable_logging_by_default=false chrome_pgo_phase=0 dawn_enable_null=false devtools_skip_typecheck=false disable_file_support=false disable_histogram_support=true enable_background_mode=false enable_basic_print_dialog=false enable_browser_speech_service=false enable_concurrent_basic_print_dialogs=false enable_media_remoting=false enable_media_remoting_rpc=false enable_nocompile_tests=false enable_pdf_ink2=false enable_pdf_save_to_drive=false enable_perfetto_unittests=false enable_rlz=false enable_rust_png=false enable_screen_ai_browsertests=false enable_service_discovery=false enable_trace_logging=false enable_vr=false enable_widevine=false generate_about_credits=false gtest_enable_absl_printers=false headless_enable_commands=false headless_mode_policy_supported=false headless_use_policy=false headless_use_prefs=false icu_use_data_file=true include_branded_entitlements=false init_stack_vars=false media_use_openh264=false optional_trace_events_enabled=false ozone_platform_headless=false proprietary_codecs=false safe_browsing_mode=0 skia_enable_skshaper_tests=false tint_build_unittests=false use_sysroot=false use_system_libffi=true v8_deprecation_warnings=false v8_enable_test_features=false v8_enable_webassembly=true v8_imminent_deprecation_warnings=false host_toolchain=//build/toolchain/linux/unbundle:default'

        AR: llvm-ar
        CC: clang
        CXX: clang++
        NM: llvm-nm
        RANLIB: llvm-ranlib
        STRIP: llvm-strip

        # Point bindgen to LLVM's libclang
        LIBCLANG_PATH: /app/lib/sdk/llvm21/lib

        # Paths to Node.js
        NODE_HOME: /usr/lib/sdk/node22

        # Allow the use of nightly features with stable Rust compiler
        # https://github.com/ungoogled-software/ungoogled-chromium/pull/2696#issuecomment-1918173198
        RUSTC_BOOTSTRAP: '1'

        # Configure CCACHE for faster builds
        CCACHE_NOHASHDIR: 'true'
        CCACHE_SLOPPINESS: time_macros,include_file_ctime,include_file_mtime
    sources:
      - type: file
        path: build.sh
        dest: scripts
      - type: git
        url: https://github.com/chromium/chromium.git
        tag: 139.0.7258.139
        commit: 54b87fe5881df381307c2ef806b8e5e87e8a6790
        disable-submodules: true
      - type: git
        url: https://github.com/chromiumembedded/cef.git
        commit: 10ed9b3a9dd9f401eb2550058c6e7ebe890eda61
        dest: cef
      - type: git
        url: https://gn.googlesource.com/gn
        commit: 81b24e01531ecf0eff12ec9359a555ec3944ec4e
        dest: gn
      - third-party-node-modules.yaml
      - chromium-submodules.yaml
      - type: git
        url: https://github.com/ungoogled-software/ungoogled-chromium.git
        tag: 139.0.7258.138-1
        commit: 803eb8c3f510bc70534910636acfb812b6bb9e0d
        dest: ungoogled-chromium
      - type: archive
        url: https://registry.npmjs.org/mocha/-/mocha-10.0.0.tgz
        sha256: 91c4b9e3d052d73b7cdf297d296e698e8db1137724dd4391cdc5b93ad543283f
        dest: third_party/node/node_modules/mocha
      - type: patch
        paths:
          - patch/gn-fix-building-in-flathub.patch
          - patch/chromium-138-rust-1.86-mismatched_lifetime_syntaxes.patch
          - patch/fix-wayland-and-disable-e2etests.patch
          - patch/remove-speech-service-dependency.patch
          - patch/chromium-remove-test-fonts.patch
          - patch/tsconfig-adjust-to-be-less-strict.patch
          - patch/remove-unguarded-media-remoting-references.patch
      - type: patch
        paths: 
          - patch/cef-fix-missing-absl-namespace.patch
          - patch/cef-fix-build-in-flathub.patch
          - patch/cef-fix-arm64-requires-sysroots.patch
          - patch/cef-fix-doesn-t-detect-aarch64.patch
        options:
          - --directory=cef
      # Ungoogled chromium flatpak patches
      - type: patch
        paths:
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/Import-chromium-71.0.3578.98-widevine-r3.patch-arm64-suppo.patch
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/Only-check-the-Node-major-version-number.patch
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/Remove-the-ability-to-create-desktop-shortcuts.patch
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/Use-CHROME_WRAPPER-as-the-executable-on-restart.patch
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/flatpak-Add-initial-sandbox-support.patch
          - io.github.ungoogled_software.ungoogled_chromium/patches/chromium/flatpak-Expose-Widevine-into-the-sandbox.patch
      # These need to apply after cef patches. See build.sh
      - type: file
        path: io.github.ungoogled_software.ungoogled_chromium/patches/chromium/flatpak-Adjust-paths-for-the-sandbox.patch
      - type: file
        path: patch/angle-remove-undefined-const.patch
      - type: file
        path: patch/ungoogled-chromium-adjust-for-cef.patch
      - type: file
        path: patch/ungoogled-chromium-ignore-nonexistent-binaries.patch
      - type: file
        path: patch/ungoogled-chromium-remove-extra-locales.patch
  - name: wine-staging
    buildsystem: simple
    build-commands:
      - mkdir -p wine-staging
      - tar xf wine-staging.tar.xz -C wine-staging --strip-components=1
      - cp -r wine-staging/bin/* /app/bin/
      - cp -r wine-staging/lib/* /app/lib/
      - cp -r wine-staging/share/* /app/share/
    sources:
      - type: file
        url: https://github.com/Kron4ek/Wine-Builds/releases/download/10.15/wine-10.15-staging-amd64.tar.xz
        dest-filename: wine-staging.tar.xz
        sha256: 3c6d14a58cd67ef7250967eadb84be7d0ef5f789ebacaed424bc5f3da51293b4
        x-checker-data:
          type: json
          url: https://api.github.com/repos/Kron4ek/Wine-Builds/releases/latest
          version-query: .tag_name
          url-query: .assets[] | select(.name=="wine-" + $version + "-staging-amd64.tar.xz")
            | .browser_download_url
  - name: bolt
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCEF_ROOT=/app/cef/dist
      - -DBOLT_META_NAME=com.adamcake.Bolt
      - -DBOLT_BINDIR=bin
      - -DBOLT_LIBDIR=lib
      - -DBOLT_SHAREDIR=share
    sources:
      # TODO change this to adamcake repo once merged
      - type: git
        url: https://github.com/JasperSurmont/Bolt.git
        commit: b70247625b25515b84fd6ea0e5e0ab2a93a8d7b3
